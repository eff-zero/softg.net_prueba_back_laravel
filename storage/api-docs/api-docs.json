{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel API - Soft-G.net",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "development server"
        }
    ],
    "paths": {
        "/drivers": {
            "get": {
                "tags": [
                    "Drivers"
                ],
                "summary": "Obtener conductores",
                "description": "Obtiene la lista de todos los conductores",
                "operationId": "getDrivers",
                "responses": {
                    "200": {
                        "description": "Lista de conductores obtenida exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "done"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lista de conductores obtenida exitosamente"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error al obtener conductores"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Drivers"
                ],
                "summary": "Crear conductor",
                "description": "Crear un nuevo conductor",
                "operationId": "createDriver",
                "requestBody": {
                    "description": "Datos del conductor",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "ssn",
                                    "dob",
                                    "address",
                                    "city",
                                    "zip",
                                    "phone"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "Jesus"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": ""
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": ""
                                    },
                                    "ssn": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": ""
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": ""
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "zip": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "phone": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Conductor creado correctamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "No autorizado"
                    },
                    "422": {
                        "description": "Validación fallida",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/drivers/{id}": {
            "get": {
                "tags": [
                    "Drivers"
                ],
                "summary": "Obtener información de un conductor",
                "description": "Obtiene la información de un conductor específico mediante su ID",
                "operationId": "getDriverById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID del conductor a buscar",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Información del conductor"
                    },
                    "404": {
                        "description": "El conductor no fue encontrado"
                    },
                    "500": {
                        "description": "Error interno del servidor"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Drivers"
                ],
                "summary": "Actualizar conductor",
                "description": "Actualiza los datos de un conductor existente",
                "operationId": "updateDriver",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID del conductor a actualizar",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Los datos del conductor a actualizar",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "ssn": {
                                        "type": "string"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "zip": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "El conductor ha sido actualizado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "done"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "{first_name: 'John', last_name: 'Doe', email: 'john.doe@example.com', ssn: '123-45-6789', dob: '1980-01-01', address: '123 Main St', city: 'Anytown', zip: '12345', phone: '555-1234'}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No se encontró el conductor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "not_found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Conductor no encontrado"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error al actualizar el conductor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "server_error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al actualizar conductor"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Drivers"
                ],
                "summary": "Eliminar conductor",
                "description": "Elimina un conductor por su ID",
                "operationId": "deleteDriver",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID del conductor a eliminar",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conductor eliminado correctamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "done"
                                        },
                                        "data": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Conductor eliminado correctamente"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No se encontró el conductor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "not_found"
                                        },
                                        "data": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No se encontró el conductor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error al eliminar conductor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "server_error"
                                        },
                                        "data": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al eliminar conductor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in user",
                "operationId": "0f9b41e1a9a02cd6a6f465e4e7c86283",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jesus@correo.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "done"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "{id:1,name:'John Doe'}"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Inicio de sesión exitoso"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "unauthorized"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Credenciales invalidas."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out user",
                "operationId": "e7293144c76f2c52eddbdd92625d9b7a",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "done"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": "null"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sesión cerrada exitosamente"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/vehicles": {
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Obtener vehículos",
                "description": "Obtiene la lista de todos los vehículos",
                "operationId": "getVehicles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "done"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lista de vehiculos obtenido exitosamente"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "server_error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al obtener vehiculos"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Crear/guardar vehiculo.",
                "operationId": "store",
                "requestBody": {
                    "description": "Request body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "Sedan"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2020
                                    },
                                    "mark": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "capacity": {
                                        "type": "number",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "created"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vehículo creado"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "server_error"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al crear vehículo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/vehicles/{id}": {
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Obtener información de un vehículo",
                "description": "Obtener información de un vehículo por su ID.",
                "operationId": "getVehicleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID del vehículo",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehículo encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Toyota Corolla"
                                        },
                                        "year": {
                                            "type": "integer",
                                            "example": "2021"
                                        },
                                        "mark": {
                                            "type": "string",
                                            "example": "Toyota"
                                        },
                                        "capacity": {
                                            "type": "number",
                                            "example": "1000"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehículo no encontrado"
                    },
                    "500": {
                        "description": "Error interno del servidor"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Actualizar un vehiculo",
                "description": "Update an existing vehicle.",
                "operationId": "cc5f9eada6491118ac83bc4041bf495e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the vehicle to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Toyota Corolla"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": "2021"
                                    },
                                    "mark": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "capacity": {
                                        "type": "number",
                                        "example": "1000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "data": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Vehicle not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Error updating vehicle"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Eliminar vehículo",
                "description": "Elimina un vehículo dado su ID",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID del vehículo a eliminar",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehículo eliminado con éxito",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "done"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vehículo eliminado con éxito"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehículo no encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "not_found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vehículo no encontrado"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error al eliminar vehículo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "server_error"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error al eliminar vehículo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token_here>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}